include:
  - project: 'AgileFactory/Witboost.Mesh/witboost.Mesh.CI'
    ref: 'main'
    file: 'common/witboost.helm.gitlab-ci.yml'
  - project: 'AgileFactory/Witboost.Mesh/witboost.Mesh.CI'
    ref: 'main'
    file: 'common/witboost.downstream.gitlab-ci.yml'

image: sbtscala/scala-sbt:eclipse-temurin-jammy-17.0.9_9_1.9.7_2.13.12

variables:
  SBT_OPTS: "-Dsbt.global.base=sbt-cache/sbtboot -Dsbt.boot.directory=sbt-cache/boot -Dsbt.ivy.home=sbt-cache/ivy -Dsbt.ci=true"

cache:
  untracked: true
  paths:
    - "sbt-cache/ivy/cache"
    - "sbt-cache/boot"
    - "sbt-cache/sbtboot"
    - "sbt-cache/target"

stages:
  - setup
  - check
  - test
  - build
  - package

setup:
  stage: setup
  extends: .witboost.helm.base-job
  cache: []
  before_script: []
  script:
    - !reference [.witboost.helm.clone-scripts, script]
    - !reference [.witboost.helm.get-version, script]
    - echo "VERSION=${VERSION}" >> vars.env
  artifacts:
    reports:
      dotenv: vars.env

witboost.helm.checks:
  stage: check
  extends: .witboost.helm.base-job
  before_script: []
  cache: []
  script:
    - !reference [.witboost.helm.clone-scripts, script]
    - !reference [.witboost.helm.checks, script]
  variables:
    CHART_FOLDER: helm

checkFormatting:
  stage: check
  script:
    - 'sbt scalafmtSbtCheck scalafmtCheckAll'

test:
  stage: test
  script:
    - apt-get update -yqq && apt-get install -yqq npm
    - npm install @openapitools/openapi-generator-cli@2.7.0 -g
    - 'sbt -Dconfig.override_with_env_vars=true clean generateCode coverage test coverageReport'
  coverage: '/Statement coverage[A-Za-z\.*]\s*:\s*([^%]+)/'
  artifacts:
    paths:
      - target/scala-2.13/scoverage-report/*
      - target/scala-2.13/coverage-report/*
    reports:
      coverage_report:
        coverage_format: cobertura
        path: 'target/scala-2.13/coverage-report/cobertura.xml'


build:
  services:
    - docker:19.03.12-dind
  stage: build
  variables:
    DOCKER_HOST: tcp://docker:2375
  script: |
    apt-get update -yqq && apt-get install -yqq ca-certificates curl gnupg npm
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    echo   "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu focal stable" |  tee /etc/apt/sources.list.d/docker.list > /dev/null
    apt-get update -yqq
    apt-get install -yqq docker-ce-cli
    apt-get install -yqq npm
    npm install @openapitools/openapi-generator-cli@2.7.0 -g
    docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    echo "VERSION: $VERSION"
    sbt clean generateCode compile k8tyGitlabCIPublish docker:publish

witboost.helm.deploy:
  stage: package
  before_script: []
  cache: []
  extends: .witboost.helm.deploy
  only:
    - master
    - tags
    - /(^release\/([0-9]+)\.([0-9]+))/